# -*- coding: utf-8 -*-
# Generated by Django 1.11 on 2017-09-07 06:25
from __future__ import unicode_literals

import candidate.models
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AdditionalQualifications',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('class_degree', models.CharField(blank=True, max_length=200)),
                ('institute_name', models.CharField(blank=True, max_length=200)),
                ('university_board_council', models.CharField(blank=True, max_length=200)),
                ('marks_obtained', models.PositiveSmallIntegerField(blank=True, default=0)),
                ('total_marks', models.PositiveSmallIntegerField(blank=True, default=100)),
                ('percentage', models.PositiveSmallIntegerField(blank=True, default=0)),
                ('grade', models.CharField(blank=True, default='', max_length=20)),
                ('proof', models.FileField(blank=True, default=None, null=True, upload_to='')),
                ('course_topic', models.CharField(blank=True, max_length=200, null=True)),
                ('date_from', models.DateField(blank=True, null=True)),
                ('date_to', models.DateField(blank=True, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Candidate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='Name', max_length=200)),
                ('fathers_name', models.CharField(default="Father's Name", max_length=200)),
                ('date_of_birth', models.DateField(default=django.utils.timezone.now)),
                ('gender', models.CharField(choices=[('Male', 'Male'), ('Female', 'Female')], default='Male', max_length=200)),
                ('marital_status', models.CharField(choices=[('Married', 'Married'), ('Single', 'Single')], default='Single', max_length=200)),
                ('phone_number', models.CharField(default='9810117638', max_length=200)),
                ('house_number', models.CharField(default='Address Line 1', max_length=200)),
                ('area_locality', models.CharField(default='Locality', max_length=200)),
                ('street_name', models.CharField(default='Street Nae', max_length=200)),
                ('village_PS_PO', models.CharField(default='PS/PO/Village', max_length=200)),
                ('country', models.CharField(default='India', max_length=200)),
                ('state', models.CharField(default='Delhi', max_length=200)),
                ('district', models.CharField(default='Delhi', max_length=200)),
                ('pin_code', models.CharField(default='110078', max_length=200)),
                ('degree_recognized_by_INC', models.BooleanField(default=False)),
                ('state_nursing_council_name', models.CharField(blank=True, choices=[('SNC1', 'SNC1'), ('SNC2', 'SNC2'), ('SNC3', 'SNC3')], default='SNC1', max_length=200)),
                ('state_nursing_council_registration_number', models.CharField(blank=True, default='', max_length=200)),
                ('state_nursing_council_registration_date', models.DateField(blank=True, default=django.utils.timezone.now)),
                ('state_nursing_council_proof', models.FileField(blank=True, default=None, null=True, upload_to='')),
                ('passport_number', models.CharField(blank=True, max_length=50)),
                ('passport_valid_from', models.PositiveSmallIntegerField(blank=True, choices=[(1970, 1970), (1971, 1971), (1972, 1972), (1973, 1973), (1974, 1974), (1975, 1975), (1976, 1976), (1977, 1977), (1978, 1978), (1979, 1979), (1980, 1980), (1981, 1981), (1982, 1982), (1983, 1983), (1984, 1984), (1985, 1985), (1986, 1986), (1987, 1987), (1988, 1988), (1989, 1989), (1990, 1990), (1991, 1991), (1992, 1992), (1993, 1993), (1994, 1994), (1995, 1995), (1996, 1996), (1997, 1997), (1998, 1998), (1999, 1999), (2000, 2000), (2001, 2001), (2002, 2002), (2003, 2003), (2004, 2004), (2005, 2005), (2006, 2006), (2007, 2007), (2008, 2008), (2009, 2009), (2010, 2010), (2011, 2011), (2012, 2012), (2013, 2013), (2014, 2014), (2015, 2015), (2016, 2016), (2017, 2017), (2018, 2018), (2019, 2019), (2020, 2020), (2021, 2021), (2022, 2022), (2023, 2023), (2024, 2024), (2025, 2025), (2026, 2026), (2027, 2027), (2028, 2028), (2029, 2029), (2030, 2030), (2031, 2031), (2032, 2032), (2033, 2033), (2034, 2034), (2035, 2035), (2036, 2036)], null=True)),
                ('passport_valid_to', models.PositiveSmallIntegerField(blank=True, choices=[(1970, 1970), (1971, 1971), (1972, 1972), (1973, 1973), (1974, 1974), (1975, 1975), (1976, 1976), (1977, 1977), (1978, 1978), (1979, 1979), (1980, 1980), (1981, 1981), (1982, 1982), (1983, 1983), (1984, 1984), (1985, 1985), (1986, 1986), (1987, 1987), (1988, 1988), (1989, 1989), (1990, 1990), (1991, 1991), (1992, 1992), (1993, 1993), (1994, 1994), (1995, 1995), (1996, 1996), (1997, 1997), (1998, 1998), (1999, 1999), (2000, 2000), (2001, 2001), (2002, 2002), (2003, 2003), (2004, 2004), (2005, 2005), (2006, 2006), (2007, 2007), (2008, 2008), (2009, 2009), (2010, 2010), (2011, 2011), (2012, 2012), (2013, 2013), (2014, 2014), (2015, 2015), (2016, 2016), (2017, 2017), (2018, 2018), (2019, 2019), (2020, 2020), (2021, 2021), (2022, 2022), (2023, 2023), (2024, 2024), (2025, 2025), (2026, 2026), (2027, 2027), (2028, 2028), (2029, 2029), (2030, 2030), (2031, 2031), (2032, 2032), (2033, 2033), (2034, 2034), (2035, 2035), (2036, 2036)], null=True)),
                ('passport_place_of_issue', models.CharField(blank=True, max_length=200)),
                ('tnai_number', models.CharField(blank=True, default='', max_length=200)),
                ('preference_of_work', models.CharField(blank=True, choices=[('India', 'India'), ('Foreign', 'Foreign'), ('Both', 'Both')], max_length=10)),
                ('candidate_username', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='candidate_username', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='EducationalQualifications',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('class_degree', models.CharField(blank=True, max_length=200)),
                ('institute_name', models.CharField(blank=True, max_length=200)),
                ('university_board_council', models.CharField(blank=True, max_length=200)),
                ('marks_obtained', models.PositiveSmallIntegerField(blank=True, default=0)),
                ('total_marks', models.PositiveSmallIntegerField(blank=True, default=100)),
                ('percentage', models.PositiveSmallIntegerField(blank=True, default=0)),
                ('grade', models.CharField(blank=True, default='', max_length=20)),
                ('proof', models.FileField(blank=True, default=None, null=True, upload_to='')),
                ('year_from', candidate.models.FormYearField(blank=True, choices=[(1970, 1970), (1971, 1971), (1972, 1972), (1973, 1973), (1974, 1974), (1975, 1975), (1976, 1976), (1977, 1977), (1978, 1978), (1979, 1979), (1980, 1980), (1981, 1981), (1982, 1982), (1983, 1983), (1984, 1984), (1985, 1985), (1986, 1986), (1987, 1987), (1988, 1988), (1989, 1989), (1990, 1990), (1991, 1991), (1992, 1992), (1993, 1993), (1994, 1994), (1995, 1995), (1996, 1996), (1997, 1997), (1998, 1998), (1999, 1999), (2000, 2000), (2001, 2001), (2002, 2002), (2003, 2003), (2004, 2004), (2005, 2005), (2006, 2006), (2007, 2007), (2008, 2008), (2009, 2009), (2010, 2010), (2011, 2011), (2012, 2012), (2013, 2013), (2014, 2014), (2015, 2015), (2016, 2016), (2017, 2017), (2018, 2018), (2019, 2019), (2020, 2020), (2021, 2021), (2022, 2022), (2023, 2023), (2024, 2024), (2025, 2025), (2026, 2026), (2027, 2027), (2028, 2028), (2029, 2029), (2030, 2030), (2031, 2031), (2032, 2032), (2033, 2033), (2034, 2034), (2035, 2035), (2036, 2036)], null=True)),
                ('year_to', candidate.models.FormYearField(blank=True, choices=[(1970, 1970), (1971, 1971), (1972, 1972), (1973, 1973), (1974, 1974), (1975, 1975), (1976, 1976), (1977, 1977), (1978, 1978), (1979, 1979), (1980, 1980), (1981, 1981), (1982, 1982), (1983, 1983), (1984, 1984), (1985, 1985), (1986, 1986), (1987, 1987), (1988, 1988), (1989, 1989), (1990, 1990), (1991, 1991), (1992, 1992), (1993, 1993), (1994, 1994), (1995, 1995), (1996, 1996), (1997, 1997), (1998, 1998), (1999, 1999), (2000, 2000), (2001, 2001), (2002, 2002), (2003, 2003), (2004, 2004), (2005, 2005), (2006, 2006), (2007, 2007), (2008, 2008), (2009, 2009), (2010, 2010), (2011, 2011), (2012, 2012), (2013, 2013), (2014, 2014), (2015, 2015), (2016, 2016), (2017, 2017), (2018, 2018), (2019, 2019), (2020, 2020), (2021, 2021), (2022, 2022), (2023, 2023), (2024, 2024), (2025, 2025), (2026, 2026), (2027, 2027), (2028, 2028), (2029, 2029), (2030, 2030), (2031, 2031), (2032, 2032), (2033, 2033), (2034, 2034), (2035, 2035), (2036, 2036)], null=True)),
                ('candidate', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='candidate.Candidate')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='EligibilityTests',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('eligibility_tests', models.CharField(blank=True, choices=[('Prometric (Specify country)', 'Prometric (Specify country)'), ('HAAD', 'HAAD'), ('DHA', 'DHA'), ('IELTS', 'IELTS'), ('CGFNS', 'CGFNS'), ('TOEFL', 'TOEFL'), ('OET', 'OET'), ('Other', 'Other')], max_length=20)),
                ('country', models.CharField(blank=True, max_length=100)),
                ('score_grade_marks', models.CharField(blank=True, max_length=20)),
                ('completed_on', models.DateField(blank=True, null=True)),
                ('valid_up_to', models.DateField(blank=True, null=True)),
                ('eligibility_proof', models.FileField(blank=True, default=None, null=True, upload_to='')),
                ('candidate', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='candidate.Candidate')),
            ],
        ),
        migrations.CreateModel(
            name='Experience',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('institution', models.CharField(blank=True, max_length=200)),
                ('country', models.CharField(blank=True, choices=[('India', 'India'), ('Foreign', 'Foreign')], max_length=200)),
                ('specialty', models.CharField(blank=True, max_length=200)),
                ('date_from', models.DateField(blank=True, null=True)),
                ('date_to', models.DateField(blank=True, null=True)),
                ('proof', models.FileField(blank=True, default=None, null=True, upload_to='')),
                ('candidate', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='candidate.Candidate')),
            ],
        ),
        migrations.CreateModel(
            name='ProfessionalQualifications',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('class_degree', models.CharField(blank=True, max_length=200)),
                ('institute_name', models.CharField(blank=True, max_length=200)),
                ('university_board_council', models.CharField(blank=True, max_length=200)),
                ('marks_obtained', models.PositiveSmallIntegerField(blank=True, default=0)),
                ('total_marks', models.PositiveSmallIntegerField(blank=True, default=100)),
                ('percentage', models.PositiveSmallIntegerField(blank=True, default=0)),
                ('grade', models.CharField(blank=True, default='', max_length=20)),
                ('proof', models.FileField(blank=True, default=None, null=True, upload_to='')),
                ('date_from', models.DateField(blank=True, null=True)),
                ('date_to', models.DateField(blank=True, null=True)),
                ('candidate', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='candidate.Candidate')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('activation_key', models.CharField(max_length=40)),
                ('key_expires', models.DateTimeField()),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='candidate_profile', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='StateNursingCouncil',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('course', models.CharField(blank=True, max_length=10)),
                ('state', models.CharField(blank=True, max_length=200)),
                ('registration_number', models.CharField(blank=True, max_length=200)),
                ('year', candidate.models.FormYearField(blank=True, choices=[(1970, 1970), (1971, 1971), (1972, 1972), (1973, 1973), (1974, 1974), (1975, 1975), (1976, 1976), (1977, 1977), (1978, 1978), (1979, 1979), (1980, 1980), (1981, 1981), (1982, 1982), (1983, 1983), (1984, 1984), (1985, 1985), (1986, 1986), (1987, 1987), (1988, 1988), (1989, 1989), (1990, 1990), (1991, 1991), (1992, 1992), (1993, 1993), (1994, 1994), (1995, 1995), (1996, 1996), (1997, 1997), (1998, 1998), (1999, 1999), (2000, 2000), (2001, 2001), (2002, 2002), (2003, 2003), (2004, 2004), (2005, 2005), (2006, 2006), (2007, 2007), (2008, 2008), (2009, 2009), (2010, 2010), (2011, 2011), (2012, 2012), (2013, 2013), (2014, 2014), (2015, 2015), (2016, 2016), (2017, 2017), (2018, 2018), (2019, 2019), (2020, 2020), (2021, 2021), (2022, 2022), (2023, 2023), (2024, 2024), (2025, 2025), (2026, 2026), (2027, 2027), (2028, 2028), (2029, 2029), (2030, 2030), (2031, 2031), (2032, 2032), (2033, 2033), (2034, 2034), (2035, 2035), (2036, 2036)], null=True)),
                ('candidate', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='candidate.Candidate')),
            ],
        ),
        migrations.AddField(
            model_name='additionalqualifications',
            name='candidate',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='candidate.Candidate'),
        ),
    ]
